{"ast":null,"code":"var _jsxFileName = \"C:\\\\Trello\\\\src\\\\Components\\\\Card\\\\CardInfo\\\\CardInfo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Calendar, CheckSquare, List, Tag, Trash, Type } from \"react-feather\";\nimport { colorsList } from \"../../../Helper/Util\";\nimport Modal from \"../../Modal/Modal\";\nimport CustomInput from \"../../CustomInput/CustomInput\";\nimport \"./CardInfo.css\";\nimport Chip from \"../../Common/Chip\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardInfo(props) {\n  _s();\n\n  var _cardValues$labels, _cardValues$tasks4;\n\n  const {\n    onClose,\n    card,\n    boardId,\n    updateCard\n  } = props;\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [cardValues, setCardValues] = useState({ ...card\n  });\n\n  const updateTitle = value => {\n    setCardValues({ ...cardValues,\n      title: value\n    });\n  };\n\n  const updateDesc = value => {\n    setCardValues({ ...cardValues,\n      desc: value\n    });\n  };\n\n  const addLabel = label => {\n    const index = cardValues.labels.findIndex(item => item.text === label.text);\n    if (index > -1) return; //if label text already exist then return\n\n    setSelectedColor(\"\");\n    setCardValues({ ...cardValues,\n      labels: [...cardValues.labels, label]\n    });\n  };\n\n  const removeLabel = label => {\n    const tempLabels = cardValues.labels.filter(item => item.text !== label.text);\n    setCardValues({ ...cardValues,\n      labels: tempLabels\n    });\n  };\n\n  const addTask = value => {\n    const task = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value\n    };\n    setCardValues({ ...cardValues,\n      tasks: [...cardValues.tasks, task]\n    });\n  };\n\n  const removeTask = id => {\n    const tasks = [...cardValues.tasks];\n    const tempTasks = tasks.filter(item => item.id !== id);\n    setCardValues({ ...cardValues,\n      tasks: tempTasks\n    });\n  };\n\n  const updateTask = (id, value) => {\n    const tasks = [...cardValues.tasks];\n    const index = tasks.findIndex(item => item.id === id);\n    if (index < 0) return;\n    tasks[index].completed = Boolean(value);\n    setCardValues({ ...cardValues,\n      tasks\n    });\n  };\n\n  const calculatePercent = () => {\n    var _cardValues$tasks, _cardValues$tasks2, _cardValues$tasks2$fi, _cardValues$tasks3;\n\n    if (!((_cardValues$tasks = cardValues.tasks) === null || _cardValues$tasks === void 0 ? void 0 : _cardValues$tasks.length)) return 0;\n    const completed = (_cardValues$tasks2 = cardValues.tasks) === null || _cardValues$tasks2 === void 0 ? void 0 : (_cardValues$tasks2$fi = _cardValues$tasks2.filter(item => item.completed)) === null || _cardValues$tasks2$fi === void 0 ? void 0 : _cardValues$tasks2$fi.length;\n    return completed / ((_cardValues$tasks3 = cardValues.tasks) === null || _cardValues$tasks3 === void 0 ? void 0 : _cardValues$tasks3.length) * 100;\n  };\n\n  const updateDate = date => {\n    if (!date) return;\n    setCardValues({ ...cardValues,\n      date\n    });\n  };\n\n  useEffect(() => {\n    if (updateCard) updateCard(boardId, cardValues.id, cardValues); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cardValues]);\n  const calculatedPercent = calculatePercent();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardinfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-title\",\n          children: [/*#__PURE__*/_jsxDEV(Type, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          defaultValue: cardValues.title,\n          text: cardValues.title,\n          placeholder: \"Enter Title\",\n          onSubmit: updateTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-title\",\n          children: [/*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          defaultValue: cardValues.desc,\n          text: cardValues.desc || \"Add a Description\",\n          placeholder: \"Enter description\",\n          onSubmit: updateDesc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-title\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          defaultValue: cardValues.date,\n          min: new Date().toISOString().substr(0, 10),\n          onChange: event => updateDate(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-title\",\n          children: [/*#__PURE__*/_jsxDEV(Tag, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Labels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-labels\",\n          children: (_cardValues$labels = cardValues.labels) === null || _cardValues$labels === void 0 ? void 0 : _cardValues$labels.map((item, index) => /*#__PURE__*/_jsxDEV(Chip, {\n            item: item,\n            removeLabel: removeLabel\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: colorsList.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              backgroundColor: item\n            },\n            className: selectedColor === item ? \"li-active\" : \"\",\n            onClick: () => setSelectedColor(item)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          text: \"Add Label\",\n          placeholder: \"Enter label text\",\n          onSubmit: value => addLabel({\n            color: selectedColor,\n            text: value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardinfo-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-title\",\n          children: [/*#__PURE__*/_jsxDEV(CheckSquare, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardinfo-box-progress\",\n            style: {\n              width: `${calculatedPercent}%`,\n              backgroundColor: calculatedPercent === 100 ? \"limegreen\" : \"\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardinfo-box-task-list\",\n          children: (_cardValues$tasks4 = cardValues.tasks) === null || _cardValues$tasks4 === void 0 ? void 0 : _cardValues$tasks4.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cardinfo-box-task-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              defaultChecked: item.completed,\n              onChange: event => updateTask(item.id, event.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: item.completed ? \"completed\" : \"\",\n              children: item.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Trash, {\n              onClick: () => removeTask(item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          text: \"Add a Task\",\n          placeholder: \"Enter task\",\n          onSubmit: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardInfo, \"XZs42MPwl18kBW02SGrjrAnjA0Y=\");\n\n_c = CardInfo;\nexport default CardInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardInfo\");","map":{"version":3,"sources":["C:/Trello/src/Components/Card/CardInfo/CardInfo.tsx"],"names":["React","useEffect","useState","Calendar","CheckSquare","List","Tag","Trash","Type","colorsList","Modal","CustomInput","Chip","CardInfo","props","onClose","card","boardId","updateCard","selectedColor","setSelectedColor","cardValues","setCardValues","updateTitle","value","title","updateDesc","desc","addLabel","label","index","labels","findIndex","item","text","removeLabel","tempLabels","filter","addTask","task","id","Date","now","Math","random","completed","tasks","removeTask","tempTasks","updateTask","Boolean","calculatePercent","length","updateDate","date","calculatedPercent","toISOString","substr","event","target","map","backgroundColor","color","width","checked"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Calendar, CheckSquare, List, Tag, Trash, Type } from \"react-feather\";\nimport { colorsList } from \"../../../Helper/Util\";\nimport Modal from \"../../Modal/Modal\";\nimport CustomInput from \"../../CustomInput/CustomInput\";\n\nimport \"./CardInfo.css\";\nimport { ICard, ILabel, ITask } from \"../../../Interfaces/Kanban\";\nimport Chip from \"../../Common/Chip\";\ninterface CardInfoProps {\n  onClose: () => void;\n  card: ICard;\n  boardId: number;\n  updateCard: (boardId: number, cardId: number, card: ICard) => void;\n}\nfunction CardInfo(props: CardInfoProps) {\n  const { onClose, card, boardId, updateCard } = props;\n  const [selectedColor, setSelectedColor] = useState(\"\");\n  const [cardValues, setCardValues] = useState<ICard>({\n    ...card,\n  });\n\n  const updateTitle = (value: string) => {\n    setCardValues({ ...cardValues, title: value });\n  };\n\n  const updateDesc = (value: string) => {\n    setCardValues({ ...cardValues, desc: value });\n  };\n\n  const addLabel = (label: ILabel) => {\n    const index = cardValues.labels.findIndex(\n      (item) => item.text === label.text,\n    );\n    if (index > -1) return; //if label text already exist then return\n\n    setSelectedColor(\"\");\n    setCardValues({\n      ...cardValues,\n      labels: [...cardValues.labels, label],\n    });\n  };\n\n  const removeLabel = (label: ILabel) => {\n    const tempLabels = cardValues.labels.filter(\n      (item) => item.text !== label.text,\n    );\n\n    setCardValues({\n      ...cardValues,\n      labels: tempLabels,\n    });\n  };\n\n  const addTask = (value: string) => {\n    const task: ITask = {\n      id: Date.now() + Math.random() * 2,\n      completed: false,\n      text: value,\n    };\n    setCardValues({\n      ...cardValues,\n      tasks: [...cardValues.tasks, task],\n    });\n  };\n\n  const removeTask = (id: number) => {\n    const tasks = [...cardValues.tasks];\n\n    const tempTasks = tasks.filter((item) => item.id !== id);\n    setCardValues({\n      ...cardValues,\n      tasks: tempTasks,\n    });\n  };\n\n  const updateTask = (id: number, value: boolean) => {\n    const tasks = [...cardValues.tasks];\n\n    const index = tasks.findIndex((item) => item.id === id);\n    if (index < 0) return;\n\n    tasks[index].completed = Boolean(value);\n\n    setCardValues({\n      ...cardValues,\n      tasks,\n    });\n  };\n\n  const calculatePercent = () => {\n    if (!cardValues.tasks?.length) return 0;\n    const completed = cardValues.tasks?.filter(\n      (item) => item.completed,\n    )?.length;\n    return (completed / cardValues.tasks?.length) * 100;\n  };\n\n  const updateDate = (date: string) => {\n    if (!date) return;\n\n    setCardValues({\n      ...cardValues,\n      date,\n    });\n  };\n\n  useEffect(() => {\n    if (updateCard) updateCard(boardId, cardValues.id, cardValues);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cardValues]);\n\n  const calculatedPercent = calculatePercent();\n\n  return (\n    <Modal onClose={onClose}>\n      <div className=\"cardinfo\">\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <Type />\n            <p>Title</p>\n          </div>\n          <CustomInput\n            defaultValue={cardValues.title}\n            text={cardValues.title}\n            placeholder=\"Enter Title\"\n            onSubmit={updateTitle}\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <List />\n            <p>Description</p>\n          </div>\n          <CustomInput\n            defaultValue={cardValues.desc}\n            text={cardValues.desc || \"Add a Description\"}\n            placeholder=\"Enter description\"\n            onSubmit={updateDesc}\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <Calendar />\n            <p>Date</p>\n          </div>\n          <input\n            type=\"date\"\n            defaultValue={cardValues.date}\n            min={new Date().toISOString().substr(0, 10)}\n            onChange={(event) => updateDate(event.target.value)}\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <Tag />\n            <p>Labels</p>\n          </div>\n          <div className=\"cardinfo-box-labels\">\n            {cardValues.labels?.map((item, index) => (\n              <Chip key={index} item={item} removeLabel={removeLabel} />\n            ))}\n          </div>\n          <ul>\n            {colorsList.map((item, index) => (\n              <li\n                key={index}\n                style={{ backgroundColor: item }}\n                className={selectedColor === item ? \"li-active\" : \"\"}\n                onClick={() => setSelectedColor(item)}\n              />\n            ))}\n          </ul>\n          <CustomInput\n            text=\"Add Label\"\n            placeholder=\"Enter label text\"\n            onSubmit={(value: string) =>\n              addLabel({ color: selectedColor, text: value })\n            }\n          />\n        </div>\n\n        <div className=\"cardinfo-box\">\n          <div className=\"cardinfo-box-title\">\n            <CheckSquare />\n            <p>Tasks</p>\n          </div>\n          <div className=\"cardinfo-box-progress-bar\">\n            <div\n              className=\"cardinfo-box-progress\"\n              style={{\n                width: `${calculatedPercent}%`,\n                backgroundColor: calculatedPercent === 100 ? \"limegreen\" : \"\",\n              }}\n            />\n          </div>\n          <div className=\"cardinfo-box-task-list\">\n            {cardValues.tasks?.map((item) => (\n              <div key={item.id} className=\"cardinfo-box-task-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  defaultChecked={item.completed}\n                  onChange={(event) =>\n                    updateTask(item.id, event.target.checked)\n                  }\n                />\n                <p className={item.completed ? \"completed\" : \"\"}>{item.text}</p>\n                <Trash onClick={() => removeTask(item.id)} />\n              </div>\n            ))}\n          </div>\n          <CustomInput\n            text={\"Add a Task\"}\n            placeholder=\"Enter task\"\n            onSubmit={addTask}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nexport default CardInfo;\n"]},"metadata":{},"sourceType":"module"}